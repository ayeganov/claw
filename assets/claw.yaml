# The type of receiver to use for sending prompts to the LLM.
# Options:
#   Generic: Uses the configured llm_command (default)
#   ClaudeCli: Hardcodes "claude" as the command (ignores llm_command)
receiver_type: "ClaudeCli"

# (Optional) The executable name of the LLM CLI tool.
# Only required when using Generic receiver type.
# Ignored when receiver_type is ClaudeCli (which hardcodes "claude").
# llm_command: "my-llm-tool"

# (Optional) The argument pattern for passing additional flags to the LLM.
# IMPORTANT: How prompts are sent depends on this template:
#   - If "{{prompt}}" is present: Prompt is passed as a command-line argument
#   - If "{{prompt}}" is NOT present: Prompt is piped to stdin (recommended for large contexts)
#
# Stdin mode (recommended - no shell limits):
prompt_arg_template: ""
#
# Or with additional flags:
# prompt_arg_template: "--profile work"
#
# Argument mode (may hit shell limits with large prompts):
# prompt_arg_template: "--message {{prompt}}"

# Context Management 2.0 Configuration
# These settings control how claw processes files passed via --context parameter

# Maximum file size in KB that can be included as context (default: 1024 = 1 MB)
max_file_size_kb: 3072

# Maximum number of files per directory when scanning (default: 50)
max_files_per_directory: 50

# How to handle errors during context processing (default: flexible)
# Options:
#   strict: Fail immediately on any error
#   flexible: Collect all errors and prompt user for approval before proceeding
#   ignore: Log warnings but continue processing valid files
error_handling_mode: flexible

# Directories to exclude when scanning for context files
excluded_directories:
  - ".git"
  - "node_modules"
  - "target"
  - ".venv"
  - "__pycache__"

# File extensions to exclude when scanning for context files
excluded_extensions:
  - "exe"
  - "bin"
  - "so"
  - "dylib"
  - "dll"
  - "o"
  - "a"
  - "lock"
  - "pdf"
